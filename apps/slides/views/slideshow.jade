doctype html
html
  head
    title= slideshow.name
    meta(name="description", content=slideshow.description)
    meta(name="author", content=slideshow.author)
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-status-bar-style", content="black-translucent")
    meta(name="viewport",content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
    link(rel="stylesheet", href="reveal.js-2.6.2/css/reveal.min.css")
    link(rel="stylesheet", href="reveal.js-2.6.2/css/theme/simple.css",id="theme")
    link(rel="stylesheet", href="reveal.js-2.6.2/lib/css/zenburn.css")
    script.
      if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'reveal.js-2.6.2/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
       }
  body
    .reveal
        .slides
            each slide in slideshow.slides
                section!= slide.content
    script(src="reveal.js-2.6.2/lib/js/head.min.js")
    script(src="reveal.js-2.6.2/js/reveal.min.js")
    script.
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
            transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

            // Parallax scrolling
            // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
            // parallaxBackgroundSize: '2100px 900px',

            // Optional libraries used to extend on reveal.js
            dependencies: [
            { src: 'reveal.js-2.6.2/lib/js/classList.js',
                condition: function() { return !document.body.classList; } },
            { src: 'reveal.js-2.6.2/plugin/markdown/marked.js',
                condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'reveal.js-2.6.2/plugin/markdown/markdown.js',
                condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
            { src: 'reveal.js-2.6.2/plugin/highlight/highlight.js',
                async: true,
                callback: function() { hljs.initHighlightingOnLoad(); } },
            { src: 'reveal.js-2.6.2/plugin/zoom-js/zoom.js',
                async: true,
                condition: function() { return !!document.body.classList; } },
            { src: 'reveal.js-2.6.2/plugin/notes/notes.js',
                async: true,
                condition: function() { return !!document.body.classList; } }
            ]
        });
